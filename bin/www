#!/usr/bin/env node

require('dotenv').config();
const http = require('http');
const app = require('../app');
const config = require('../config');

app.set('port', config.port);

const server = http.createServer(app);

function pipeOrPort(address) {
  return typeof address === 'string' ? `pipe ${address}` : `port ${address.port}`;
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = pipeOrPort(server.address());

  switch (error.code) {
    case 'EACCES':
      console.error(`${bind} requires elevated privileges.`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(`${bind} is already in use.`);
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  const bind = pipeOrPort(server.address());
  console.log(`Server listening on ${bind}`);
}

server.listen(config.port);
server.on('error', onError);
server.on('listening', onListening);
